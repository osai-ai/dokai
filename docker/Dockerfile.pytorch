FROM dokai:base

ENV TORCH_CUDA_ARCH_LIST "6.0;6.1;7.0;7.5;8.0;8.6;8.9"

# Install TensorRT GA and build TensorRT OSS
RUN CUDA_VERSION=11.8.0 TRT_GA_VERSION=8.5.3.1 TRT_OSS_VERSION=8.5.3 && \
    GPU_ARCHS="60 61 70 75 80 86 89" && \
    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/3bf863cc.pub && \
    apt-get update && \
    v="${TRT_GA_VERSION%.*}-1+cuda${CUDA_VERSION%.*}" && \
    apt-get install -y \
    libnvinfer8=${v} libnvonnxparsers8=${v} libnvparsers8=${v} libnvinfer-plugin8=${v} \
    libnvinfer-dev=${v} libnvonnxparsers-dev=${v} libnvparsers-dev=${v} libnvinfer-plugin-dev=${v} \
    python3-libnvinfer=${v} && \
    git clone --depth=1 --branch="$TRT_OSS_VERSION" --single-branch https://github.com/nvidia/TensorRT && \
    cd TensorRT && \
    git submodule sync && git submodule update --init --recursive && \
    mkdir -p build && cd build && \
    cmake .. -DGPU_ARCHS="$GPU_ARCHS" -DBUILD_SAMPLES=ON \
    -DTRT_LIB_DIR=/usr/lib/x86_64-linux-gnu -DTRT_OUT_DIR=/usr/lib/x86_64-linux-gnu && \
    make -j$(nproc) && \
    cd ../.. && rm -rf TensorRT && \
    ln -s /usr/lib/x86_64-linux-gnu/trtexec /usr/bin/trtexec && \
    apt-get clean && \
    apt-get -y autoremove && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /var/cache/apt/archives/*
ENV LD_LIBRARY_PATH "${LD_LIBRARY_PATH}:/usr/lib/x86_64-linux-gnu"

# Build MAGMA
COPY docker/magma/make.inc make.inc
RUN MAGMA_VERSION=2.7.1 && \
    ln -s /usr/local/cuda/lib64/libcudart.so /usr/lib/libcudart.so && \
    wget https://bitbucket.org/icl/magma/get/v${MAGMA_VERSION}.tar.gz && \
    mkdir magma-${MAGMA_VERSION}/ && \
    tar -xzf v${MAGMA_VERSION}.tar.gz -C magma-${MAGMA_VERSION}/ --strip-components=1 && \
    cp make.inc magma-${MAGMA_VERSION} && \
    cd magma-${MAGMA_VERSION} && \
    make -j$(nproc) && make install && \
    cd .. && rm -rf magma-${MAGMA_VERSION} v${MAGMA_VERSION}.tar.gz make.inc

# Install PyTorch
# Fix compilation fail with GCC 11
RUN git clone --depth=1 --branch=v2.0.0 --single-branch https://github.com/pytorch/pytorch.git && \
    cd pytorch && \
    git submodule sync && git submodule update --init --recursive && \
    sed -i 's/Store::kDefaultTimeout/::c10d::Store::kDefaultTimeout/' torch/csrc/distributed/c10d/ProcessGroupGloo.hpp && \
    TORCH_NVCC_FLAGS="-Xfatbin -compress-all" python3 setup.py install && \
    cd .. && rm -rf pytorch

# Install torchvision
RUN git clone --depth=1 --branch=v0.15.1 --single-branch https://github.com/pytorch/vision.git && \
    cd vision && \
    FORCE_CUDA=1 TORCHVISION_USE_FFMPEG=0 python3 setup.py install && \
    cd .. && rm -rf vision

# Install torchaudio
RUN git clone --depth=1 --branch=v2.0.1 --single-branch https://github.com/pytorch/audio.git && \
    cd audio && \
    git submodule sync && git submodule update --init --recursive && \
    python3 setup.py install && \
    cd .. && rm -rf audio

# Install PyTorch based packages
RUN pip3 install --no-cache-dir --no-deps \
    pytorch-ignite==0.4.11 \
    pytorch-argus==1.0.0 \
    pretrainedmodels==0.7.4 \
    efficientnet-pytorch==0.7.1 \
    pytorch-toolbelt==0.6.2 \
    kornia==0.6.11 \
    timm==0.6.13 \
    segmentation-models-pytorch==0.3.2
